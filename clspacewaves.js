document.open()
document.write("<!DOCTYPE html>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<html lang=\"en-us\">\r\n  <base href=\"https:\/\/cdn.jsdelivr.net\/gh\/bubbls\/UGS-Assets@d84a892372bc6e836fafbd784d9c12f83071b9e3\/space%20waves\/\">\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\">\r\n    <title>Space Waves<\/title>\r\n    <link rel=\"stylesheet\" href=\"TemplateData\/style.css\">\r\n\t<link rel=\"manifest\" href=\"manifest.json\">\r\n  <\/head>\r\n  <body class=\"noselect\">\r\n    <div id=\"unity-container\">\r\n      <canvas id=\"unity-canvas\"><\/canvas>\r\n    <\/div>\r\n    <div id=\"loading-cover\" style=\"display:none;\">\r\n      <div id=\"unity-loading-bar\">\r\n        <div id=\"unity-logo\"><img src=\"logo.png\"><\/div>\r\n        <\/br><\/br><\/br>\r\n        <div id=\"unity-progress-bar-empty\" style=\"display: none;\">\r\n          <div id=\"unity-progress-bar-full\"><\/div>\r\n        <\/div>\r\n        <div class=\"spinner\"><\/div>\r\n      <\/div>\r\n    <\/div>\r\n\t\r\n\t<script src=\"microsoftDataMigrationDO.js\"><\/script>\r\n    <script>\r\n      document.addEventListener(\"DOMContentLoaded\", () => {\r\n        microsoftMigration();\r\n      });\r\n\t  \r\n      window.addEventListener(\"PlayerPrefsReady\", () => {\r\n        migratePlayerPrefs();\r\n      });\r\n    <\/script>\r\n\t\r\n    <script>\r\n\t  window.addEventListener(\"load\", function () {\r\n        if (\"serviceWorker\" in navigator) {\r\n          navigator.serviceWorker.register(\"ServiceWorker.js\");\r\n        }\r\n      });\r\n\t  \r\n\t  const container = document.querySelector(\"#unity-container\");\r\n      const canvas = document.querySelector(\"#unity-canvas\");\r\n      const loadingCover = document.querySelector(\"#loading-cover\");\r\n      const progressBarEmpty = document.querySelector(\"#unity-progress-bar-empty\");\r\n      const progressBarFull = document.querySelector(\"#unity-progress-bar-full\");\r\n      const spinner = document.querySelector('.spinner');\r\n\r\n      const buildUrl = \"Build\";\r\n      const loaderUrl = buildUrl + \"\/dae5c7bd2b15915f51ae4e56b8f5367d.loader.js\";\r\n      const config = {\r\n        dataUrl: buildUrl + \"\/568ea6b3af616bd57f419c508c933303.data.unityweb\",\r\n        frameworkUrl: buildUrl + \"\/c699bc4c24abfbdb4c8b3e15b0af7d3f.framework.js.unityweb\",\r\n        codeUrl: buildUrl + \"\/7fb5141de5923189bc1dc5f94eb619f2.wasm.unityweb\",\r\n        streamingAssetsUrl: \"StreamingAssets\",\r\n        companyName: \"do.Games\",\r\n        productName: \"Space Waves\",\r\n        productVersion: \"1.1.2-ms\",\r\n\t\tmatchWebGLToCanvasSize: \"false\"\r\n      };\r\n\t  \r\n      loadingCover.style.display = \"\";\r\n\t  \r\n\t  var needMigrate = false;\r\n\t  var gameInstance;\r\n      var script = document.createElement(\"script\");\r\n      script.src = loaderUrl;\r\n      script.onload = () => {\r\n        createUnityInstance(canvas, config, (progress) => {\r\n\t\t  spinner.style.display = \"none\";\r\n          progressBarEmpty.style.display = \"\";\r\n          progressBarFull.style.width = 100 * progress + \"%\";\r\n        }).then((unityInstance) => {\r\n\t\t  console.log(\"<do.G> Unity inited\");\r\n          gameInstance = unityInstance;\r\n          loadingCover.style.display = \"none\";\r\n\t\t  resizeCanvas();\r\n\t\t  loadAds();\r\n\t\t  \r\n\t\t  if (needMigrate) {\r\n\t\t\tneedMigrate = false;\r\n\t\t    gameInstance.SendMessage('MSStartSDK', 'OnMigratePlayerPrefs', window[\"fetchPlayerPrefs\"]);\r\n\t\t  }\r\n\t\t  \r\n        }).catch((message) => {\r\n          alert(message);\r\n        });\r\n      };\r\n      document.body.appendChild(script);\r\n\t  \r\n\t  \/\/ Focus\r\n  \t  function setFocus() {\r\n  \t    container.focus();\r\n  \t\twindow.focus();\r\n  \t\tcanvas.focus();\r\n  \t  }\r\n\r\n  \t  window.addEventListener(\"touchstart\", () => {\r\n  \t    setFocus();\r\n  \t  });\r\n  \t  window.addEventListener(\"pointerdown\", () => {\r\n  \t    setFocus();\r\n  \t  });\r\n  \t  window.addEventListener(\"resize\", () => {\r\n  \t    setFocus();\r\n\t\tresizeCanvas();\r\n  \t  });\r\n\t  \r\n\t  function resizeCanvas() {\r\n\t\tvar pixelRatio = window.devicePixelRatio || 1;\r\n\t\tvar width = canvas.clientWidth * pixelRatio;\r\n\t\tvar height = canvas.clientHeight * pixelRatio;\r\n\t\t\t\r\n\t\tif (canvas.width != width || canvas.height != height) {\r\n\t\t\tif (height > 1080) {\r\n\t\t\t\tcanvas.width = Math.floor(width \/ height * 1080);\r\n\t\t\t\tcanvas.height = 1080;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tcanvas.width = width;\r\n\t\t\t\tcanvas.height = height;\r\n\t\t\t}\r\n\t\t}\r\n\t  }\r\n\t  \r\n\t  function migratePlayerPrefs() {\r\n\t    if (typeof gameInstance !== 'undefined') {\r\n\t\t  gameInstance.SendMessage('MSStartSDK', 'OnMigratePlayerPrefs', window[\"fetchPlayerPrefs\"]);\r\n\t\t} else {\r\n\t\t  needMigrate = true;\r\n\t\t}\r\n\t  }\r\n    <\/script>\r\n\t\r\n\t<script src=\"msstart-v1.0.0-rc.13.min.js\"><\/script>\r\n\t\r\n\t<script>\r\n\t\r\n\t  var _interstitialAdInstance = null;\r\n\t  var _rewardedAdInstance = null;\r\n\t  \r\n\t  function loadAds() {\r\n\t    loadInterstitialAd();\r\n\t    loadRewardedAd();\r\n\t  }\r\n\t  \r\n\t  function loadInterstitialAd() {\r\n\t    _interstitialAdInstance = null;\r\n\t\t\r\n\t\t$msstart.loadAdsAsync().then(adInstance => {\r\n\t\t  \/\/ Use the adInstance.instanceId to make a call to showAdsAsync\r\n\t\t  _interstitialAdInstance = adInstance;\r\n\t\t  console.log(\"Interstitial ad successfully loaded!\");\r\n\t    }).catch(e => {\r\n\t\t  console.error('<do.G> Error loading interstitial ad. Will retry in 20 seconds...', e);\r\n\t\t  setTimeout(loadInterstitialAd, 20000);\r\n\t\t});\r\n\t  }\r\n\t  \r\n\t  function loadRewardedAd() {\r\n\t    _rewardedAdInstance = null;\r\n\t\t\r\n\t\t$msstart.loadAdsAsync(true).then(adInstance => {\r\n\t\t  \/\/ Pass in boolean true for the optional parameter isRewardedAd, to fetch Rewarded ads\r\n\t\t  _rewardedAdInstance = adInstance;\r\n\t\t  console.log(\"Rewarded ad successfully loaded!\");\r\n\t    }).catch(e => {\r\n\t\t  console.error('<do.G> Error loading rewarded ad. Will retry in 20 seconds...', e);\r\n\t\t  setTimeout(loadRewardedAd, 20000);\r\n\t\t});\r\n\t  }\r\n\t  \r\n\t  async function showInterstitialAd() {\r\n\t    if (_interstitialAdInstance == null) {\r\n\t\t  gameInstance.SendMessage('MSStartSDK', 'OnInterstitialAdShowError');\r\n\t\t  return;\r\n\t\t}\r\n\t\t\r\n\t\tlet t;\r\n\t\t\r\n\t\ttry {\r\n\t\t  t = await $msstart.showAdsAsync(_interstitialAdInstance.instanceId);\r\n\t\t} catch (e) {\r\n\t\t  console.error('<do.G> Error show interstitial ad: ', e);\r\n\t\t  gameInstance.SendMessage('MSStartSDK', 'OnInterstitialAdShowError');\r\n\t\t  loadInterstitialAd();\r\n\t\t}\r\n\t\t\r\n\t\tif (t) {\r\n\t\t  try {\r\n\t\t    await t.showAdsCompletedAsync;\r\n\t\t\tgameInstance.SendMessage('MSStartSDK', 'OnInterstitialAdClose');\r\n\t\t\tloadInterstitialAd();\r\n\t\t  } catch (e) {\r\n            console.error('<do.G> Error interstitial showAdsCompletedAsync: ', e);\r\n\t\t    gameInstance.SendMessage('MSStartSDK', 'OnInterstitialAdShowError');\r\n\t\t    loadInterstitialAd();\r\n          }\r\n\t\t}\r\n\t  }\r\n\t  \r\n\t  async function showRewardedAd() {\r\n\t    if (_rewardedAdInstance == null) {\r\n\t\t  gameInstance.SendMessage('MSStartSDK', 'OnRewardedAdShowError');\r\n\t\t  return;\r\n\t\t}\r\n\t\t\r\n\t\tlet t;\r\n\t\t\r\n\t\ttry {\r\n\t\t  t = await $msstart.showAdsAsync(_rewardedAdInstance.instanceId);\r\n\t\t} catch (e) {\r\n\t\t  console.error('<do.G> Error show rewarded ad: ', e);\r\n\t\t  gameInstance.SendMessage('MSStartSDK', 'OnRewardedAdShowError');\r\n\t\t  loadRewardedAd();\r\n\t\t}\r\n\t\t\r\n\t\tif (t) {\r\n\t\t  try {\r\n\t\t    await t.showAdsCompletedAsync;\r\n\t\t\tgameInstance.SendMessage('MSStartSDK', 'OnReward');\r\n\t\t\tloadRewardedAd();\r\n\t\t  } catch (e) {\r\n            console.error('<do.G> Error rewarded showAdsCompletedAsync: ', e);\r\n\t\t    gameInstance.SendMessage('MSStartSDK', 'OnRewardedAdShowError');\r\n\t\t    loadRewardedAd();\r\n          }\r\n\t\t}\r\n\t  }\r\n\t  \r\n\t<\/script>\r\n\t\r\n  <\/body>\r\n<\/html>");
document.close()
