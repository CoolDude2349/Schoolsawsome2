document.open()
document.write("<!DOCTYPE html>\r\n<html lang=\"en-us\">\r\n\r\n<head>\r\n  <base href=\"https:\/\/cdn.jsdelivr.net\/gh\/genizy\/dmad-poki@49b5ab6b987f5f3be58f9dae59c92e8fc1aab9b0\/\">\r\n  <script>\r\n  window.assgdd = {\r\n    \"ancestorOrigins\": {\r\n        \"0\": \"https:\/\/games.poki.com\",\r\n        \"1\": \"https:\/\/poki.com\"\r\n    },\r\n    \"href\": \"https:\/\/f9564e4e-ef25-4e4b-ba67-cb11a1576bbd.poki-gdn.com\/cc1bc57a-e355-4696-97c2-097bf6188606\/index.html?country=US&url_referrer=https%3A%2F%2Fpoki.com%2F&site_id=3&iso_lang=en&poki_url=https%3A%2F%2Fpoki.com%2Fen%2Fg%2Fdrive-mad&hoist=yes&nonPersonalized=n&cloudsavegames=n&familyFriendly=n&categories=78%2C93%2C96%2C103%2C377%2C390%2C400%2C893%2C929%2C1126%2C1139%2C1140%2C1141%2C1143%2C1147%2C1163%2C1185%2C1190%2C1193%2C1197&special_condition=landing&game_id=f9564e4e-ef25-4e4b-ba67-cb11a1576bbd&game_version_id=cc1bc57a-e355-4696-97c2-097bf6188606&inspector=0\",\r\n    \"origin\": \"https:\/\/f9564e4e-ef25-4e4b-ba67-cb11a1576bbd.poki-gdn.com\",\r\n    \"protocol\": \"https:\",\r\n    \"host\": \"f9564e4e-ef25-4e4b-ba67-cb11a1576bbd.poki-gdn.com\",\r\n    \"hostname\": \"f9564e4e-ef25-4e4b-ba67-cb11a1576bbd.poki-gdn.com\",\r\n    \"port\": \"\",\r\n    \"pathname\": \"\/cc1bc57a-e355-4696-97c2-097bf6188606\/index.html\",\r\n    \"search\": \"?country=US&url_referrer=https%3A%2F%2Fpoki.com%2F&site_id=3&iso_lang=en&poki_url=https%3A%2F%2Fpoki.com%2Fen%2Fg%2Fdrive-mad&hoist=yes&nonPersonalized=n&cloudsavegames=n&familyFriendly=n&categories=78%2C93%2C96%2C103%2C377%2C390%2C400%2C893%2C929%2C1126%2C1139%2C1140%2C1141%2C1143%2C1147%2C1163%2C1185%2C1190%2C1193%2C1197&special_condition=landing&game_id=f9564e4e-ef25-4e4b-ba67-cb11a1576bbd&game_version_id=cc1bc57a-e355-4696-97c2-097bf6188606&inspector=0\",\r\n    \"hash\": \"\"\r\n}\r\n  <\/script>\r\n  <meta charset=\"utf-8\">\r\n  <meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\r\n\r\n  <title>Drive Mad<\/title>\r\n  <meta name=\"description\" content=\"\">\r\n  <meta name=\"google\" content=\"notranslate\">\r\n\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\">\r\n  <link rel=\"stylesheet\" href=\"webapp\/fancade.css\">\r\n  <link rel=\"icon\" href=\"webapp\/favicon.ico\">\r\n\r\n  <!-- POKI SDK -->\r\n  <script src=\"poki-sdk.js\" ><\/script>\r\n<\/head>\r\n\r\n<body id=\"body\">\r\n\r\n  <!-- Modal dialog div -->\r\n  <div id=\"modal_parent\">\r\n    <div id=\"modal_content\">\r\n      <span id=\"modal_close_button\">&times;<\/span>\r\n      <div id=\"store_link_modal_content\" class=\"modal_inner\"><\/div>\r\n      <div id=\"share_file_modal_content\" class=\"modal_inner\"><\/div>\r\n    <\/div>\r\n  <\/div>\r\n\r\n  <!-- \r\n      Game canvas and overlay. Emscripten makes some assumptions about how the canvas is positioned in order\r\n      to translate document to game coordinates\r\n    -->\r\n  <div id=\"canvas_border\" class=\"emscripten_border\">\r\n    <div id=\"play_content\" class=\"middle center\">\r\n      <div class=\"edge\">\r\n        <div class=\"box\">\r\n          <div class=\"black\">\r\n            <img src=\"webapp\/cover.jpg\" class=\"cover\">\r\n            <p class=\"title\">Drive Mad<\/p>\r\n            <p class=\"author\">Fancade<\/p>\r\n          <\/div>\r\n        <\/div>\r\n      <\/div>\r\n      <div id=\"progress_or_play\">\r\n        <progress id=\"progress\" class=\"loading\" value=\"0\" max=\"100\"><\/progress>\r\n      <\/div>\r\n      <p class=\"description\"><\/p>\r\n    <\/div>\r\n    <canvas class=\"emscripten\" id=\"canvas\" tabindex=-1>\r\n    <\/canvas>\r\n    <div id=\"gradient\"><\/div>\r\n    <div id=\"webview_content\"><\/div>\r\n  <\/div>\r\n\r\n  <!-- Manual JS, Called from WASM -->\r\n  <script type=\"text\/javascript\">\r\n      var pokiDebug = false;\r\nvar Audio = {};\r\nAudio.inited = false;\r\nAudio.ctx = null;\r\nAudio.timer = null;\r\nAudio.allowed = false;\r\nAudio.paused = false;\r\nAudio.postInit = [];\r\nAudio.init = function (samples, sampleRate) {\r\n    Audio.inited = true;\r\n    Audio.samples = samples;\r\n    Audio.sampleRate = sampleRate;\r\n    Audio.bufferingDelay = 50 \/ 1000;\r\n    Audio.bufferDurationSecs = Audio.samples \/ Audio.sampleRate;\r\n    Audio.nextPlayTime = 0;\r\n    Audio.numSimultaneouslyQueuedBuffers = 5;\r\n    Audio.paused = false;\r\n    Audio.resume();\r\n}\r\nAudio.deinit = function () {\r\n    Audio.allowed = false;\r\n    Audio.inited = false;\r\n}\r\nAudio.allow = function () {\r\n    Audio.allowed = true;\r\n    for (let i = 0; i < Audio.postInit.length; i++) {\r\n        Audio.postInit[i]();\r\n    }\r\n    Audio.postInit = [];\r\n    document.removeEventListener('keydown', Audio.initCtx);\r\n    document.removeEventListener('mousedown', Audio.initCtx);\r\n    document.removeEventListener('touchend', Audio.initCtx);\r\n}\r\nAudio.queuedata = function () {\r\n    if (!Audio.ctx || !Audio.allowed) {\r\n        if (Audio.inited) _webaudio_fill();\r\n        return;\r\n    }\r\n    for (let i = 0; i < Audio.numSimultaneouslyQueuedBuffers; ++i) {\r\n        const secsUntilNextPlayStart = Audio.nextPlayTime - Audio.ctx.currentTime;\r\n        if (secsUntilNextPlayStart >= Audio.bufferingDelay + Audio.bufferDurationSecs * Audio.numSimultaneouslyQueuedBuffers) return;\r\n        Audio.data = _webaudio_fill();\r\n        Audio.push(Audio.data);\r\n    }\r\n}\r\nAudio.push = function () {\r\n    if (Audio.paused) return;\r\n    const curtime = Audio.ctx.currentTime;\r\n    const playtime = Math.max(curtime + Audio.bufferingDelay, Audio.nextPlayTime);\r\n    Audio.nextPlayTime = playtime + Audio.bufferDurationSecs;\r\n    const buffer = Audio.ctx.createBuffer(1, Audio.samples, Audio.sampleRate);\r\n    const bufferData = buffer.getChannelData(0);\r\n    for (let i = 0; i < Audio.samples; i++) {\r\n        bufferData[i] = Module.getValue(Audio.data + (4 * i), 'float');\r\n    }\r\n    const source = Audio.ctx.createBufferSource();\r\n    source.buffer = buffer;\r\n    source.connect(Audio.ctx.destination);\r\n    if (typeof source['start'] != 'undefined') {\r\n        source.start(playtime);\r\n    } else if (typeof source['noteOn'] != 'undefined') {\r\n        source.noteOn(playtime);\r\n    }\r\n}\r\nAudio.caller = function () {\r\n    if (!Audio.ctx) return;\r\n    --Audio.numAudioTimersPending;\r\n    Audio.queuedata();\r\n    const secsUntilNextPlayStart = Audio.nextPlayTime - Audio.ctx.currentTime;\r\n    const preemptBufferFeedSecs = Audio.bufferDurationSecs \/ 2.0;\r\n    if (Audio.numAudioTimersPending < Audio.numSimultaneouslyQueuedBuffers) {\r\n        ++Audio.numAudioTimersPending;\r\n        if (Audio.numAudioTimersPending < Audio.numSimultaneouslyQueuedBuffers) {\r\n            ++Audio.numAudioTimersPending;\r\n            setTimeout(Audio.caller, 1.0);\r\n        }\r\n    }\r\n}\r\nAudio.onRuntimeInitialized = function () {\r\n    document.addEventListener('keydown', Audio.initCtx);\r\n    document.addEventListener('mousedown', Audio.initCtx);\r\n    document.addEventListener('touchend', Audio.initCtx);\r\n    Audio.initCtx();\r\n}\r\nAudio.initCtx = function (e) {\r\n    if (!Audio.ctx) {\r\n        Audio.ctx = new(window.AudioContext || window.webkitAudioContext)();\r\n    }\r\n    if (!Audio.allowed) {\r\n        if (Audio.ctx.state === 'running') {\r\n            Audio.allow();\r\n        } else {\r\n            Audio.ctx.resume().then(function (state) {\r\n                if (Audio.ctx.state === 'running') {\r\n                    Audio.allow();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nAudio.pause = function () {\r\n    Audio.paused = true;\r\n    if (Audio.timer) {\r\n        clearTimeout(Audio.timer);\r\n        Audio.numAudioTimersPending = 0;\r\n        Audio.timer = null;\r\n        Audio.nextPlayTime = 0;\r\n    }\r\n}\r\nAudio.resume = function () {\r\n    Audio.paused = false;\r\n    Audio.numAudioTimersPending = 1;\r\n    Audio.timer = setTimeout(Audio.caller, 1.0);\r\n}\r\nvar Storage = {};\r\nStorage.VERSION = 1;\r\nStorage.PATH_VERSION = 'com.martinmagni.drivemad\/version';\r\nStorage.PREFIX = 'com.martinmagni.drivemad\/data\/';\r\nStorage.LEGACY_PREFIX = '\/';\r\nStorage.stringToHex = function (str) {\r\n    var hex = '';\r\n    for (var i = 0; i < str.length; i++) {\r\n        hex += str.charCodeAt(i).toString(16) + \" \";\r\n    }\r\n    return hex;\r\n}\r\nStorage.arrayToBase64 = function (array) {\r\n    let binaryString = '';\r\n    for (let i = 0; i < array.byteLength; i++) {\r\n        binaryString += String.fromCharCode(array[i]);\r\n    }\r\n    return window.btoa(binaryString);\r\n}\r\nStorage.base64ToArray = function (base64) {\r\n    const binaryString = window.atob(base64);\r\n    let array = new Uint8Array(binaryString.length);\r\n    for (let i = 0; i < binaryString.length; i++) {\r\n        array[i] = binaryString.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nStorage.get = function (prefix, path) {\r\n    let base64;\r\n    try {\r\n        base64 = localStorage.getItem(prefix + path);\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n    if (base64 === null) return null;\r\n    try {\r\n        return Storage.base64ToArray(base64);\r\n    } catch (e) {\r\n        console.error(`Failed to get path '${path}' with base64 '${Storage.stringToHex(base64)}'`);\r\n        console.error(e);\r\n        return null;\r\n    }\r\n}\r\nStorage.put = function (prefix, path, data) {\r\n    let base64;\r\n    try {\r\n        base64 = Storage.arrayToBase64(data);\r\n    } catch (e) {\r\n        console.error(`Failed to put path '${path}' with data '${Storage.stringToHex(data)}'`);\r\n        console.error(e);\r\n        return;\r\n    }\r\n    try {\r\n        localStorage.setItem(prefix + path, base64);\r\n    } catch (e) {}\r\n}\r\nStorage.migrate0 = function () {\r\n    let old_version;\r\n    try {\r\n        old_version = localStorage.getItem(Storage.PATH_VERSION);\r\n    } catch (e) {\r\n        return;\r\n    }\r\n    if (old_version !== null) return;\r\n    const version = 1;\r\n    console.log(`Migrating Local Storage DB from ${old_version} to ${version}`);\r\n    let len;\r\n    try {\r\n        len = localStorage.length;\r\n    } catch (e) {\r\n        return;\r\n    }\r\n    for (let i = 0; i < len; i++) {\r\n        let key;\r\n        try {\r\n            key = localStorage.key(i);\r\n        } catch (e) {\r\n            continue;\r\n        }\r\n        if (key === null || !key.startsWith(Storage.LEGACY_PREFIX)) {\r\n            continue;\r\n        }\r\n        const path = key.slice(Storage.LEGACY_PREFIX.length);\r\n        const data = Storage.get(Storage.LEGACY_PREFIX, path);\r\n        if (data === null) continue;\r\n        Storage.put(Storage.PREFIX, path, data);\r\n        try {\r\n            localStorage.removeItem(Storage.LEGACY_PREFIX + path);\r\n        } catch (e) {}\r\n    }\r\n    try {\r\n        localStorage.setItem(Storage.PATH_VERSION, JSON.stringify({\r\n            \"version\": version\r\n        }));\r\n    } catch (e) {}\r\n}\r\nStorage.sync = function () {\r\n    let len;\r\n    try {\r\n        len = localStorage.length;\r\n    } catch (e) {\r\n        return;\r\n    }\r\n    const path_ptr = _malloc(Storage.PATH_MAX);\r\n    let data_cap = 1024;\r\n    let data_ptr = _malloc(data_cap);\r\n    for (let i = 0; i < len; i++) {\r\n        let key;\r\n        try {\r\n            key = localStorage.key(i);\r\n        } catch (e) {\r\n            continue;\r\n        }\r\n        if (key === null || !key.startsWith(Storage.PREFIX)) {\r\n            continue;\r\n        }\r\n        const path = key.slice(Storage.PREFIX.length);\r\n        const data = Storage.get(Storage.PREFIX, path);\r\n        if (data === null) continue;\r\n        const data_len = data.length;\r\n        if (data_len > data_cap) {\r\n            data_cap = data_len;\r\n            _free(data_ptr);\r\n            data_ptr = _malloc(data_cap);\r\n        }\r\n        Module.stringToUTF8(path, path_ptr, Storage.PATH_MAX);\r\n        Module.writeArrayToMemory(data, data_ptr);\r\n        _storage_write(path_ptr, data_ptr, data_len);\r\n    }\r\n    _free(path_ptr);\r\n    _free(data_ptr);\r\n}\r\nStorage.init = function (path_max) {\r\n    Storage.PATH_MAX = path_max;\r\n    Storage.migrate0();\r\n    Storage.sync();\r\n    try {\r\n        localStorage.setItem(Storage.PATH_VERSION, JSON.stringify({\r\n            \"version\": Storage.VERSION\r\n        }));\r\n    } catch (e) {}\r\n}\r\nStorage.remove = function (path_ptr) {\r\n    const path = Storage.PREFIX + Module.UTF8ToString(path_ptr);\r\n    try {\r\n        localStorage.removeItem(path);\r\n    } catch (e) {}\r\n}\r\nStorage.write = function (path_ptr, data_ptr, data_len) {\r\n    const path = Module.UTF8ToString(path_ptr);\r\n    const data = new Uint8Array(Module.HEAPU8.buffer, data_ptr, data_len);\r\n    Storage.put(Storage.PREFIX, path, data);\r\n}\r\nvar postRunDone = false;\r\nvar theDomLoaded = false;\r\nvar pokiInited = true;\r\nvar gameReadyToStart = false;\r\nvar requestedCanvas = false;\r\nvar adblocker = false;\r\nvar gameStarted = false;\r\nvar updatedScreenSize = false;\r\nvar startupTimeStr = \"\";\r\nvar loadProgressFrac = 0;\r\nvar fakeProgressPercentStart = 80 + Math.random() * 15;\r\nwindow.addEventListener('DOMContentLoaded', domContentLoaded);\r\nwindow.addEventListener('load', function () {\r\n    console.log(\"Load event received\");\r\n    if (inIframe()) {\r\n        document.addEventListener('click', ev => {\r\n            let canvas = document.getElementById('canvas');\r\n            if (canvas) {\r\n                canvas.focus();\r\n            }\r\n        });\r\n        window.addEventListener(\"keydown\", function (e) {\r\n            if ([\"Space\", \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.code) > -1) {\r\n                e.preventDefault();\r\n            }\r\n        }, false);\r\n    }\r\n});\r\n\r\nfunction touchStart(ev) {\r\n    ev.preventDefault();\r\n    for (let i = 0; i < ev.changedTouches.length; i++) {\r\n        let t = ev.changedTouches.item(i);\r\n        _touch_start(t.identifier);\r\n        _touch_move(t.identifier, t.clientX, t.clientY);\r\n    }\r\n}\r\n\r\nfunction touchMove(ev) {\r\n    ev.preventDefault();\r\n    for (let i = 0; i < ev.changedTouches.length; i++) {\r\n        let t = ev.changedTouches.item(i);\r\n        _touch_move(t.identifier, t.clientX, t.clientY);\r\n    }\r\n}\r\n\r\nfunction touchEnd(ev) {\r\n    ev.preventDefault();\r\n    for (let i = 0; i < ev.changedTouches.length; i++) {\r\n        let t = ev.changedTouches.item(i);\r\n        _touch_end(t.identifier);\r\n    }\r\n}\r\n\r\nfunction mouseDown(ev) {\r\n    ev.preventDefault();\r\n    _mouse_updown(ev.button, ev.clientX, ev.clientY, 1);\r\n}\r\n\r\nfunction mouseMove(ev) {\r\n    ev.preventDefault();\r\n    _mouse_move(ev.button, ev.clientX, ev.clientY);\r\n}\r\n\r\nfunction mouseUp(ev) {\r\n    ev.preventDefault();\r\n    _mouse_updown(ev.button, ev.clientX, ev.clientY, 0);\r\n}\r\n\r\nfunction inIframe() {\r\n    try {\r\n        return window.self !== window.top;\r\n    } catch (e) {\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction updateLoadProgress() {\r\n    let progressElement = document.getElementById('progress');\r\n    if (progressElement) {\r\n        progressElement.value = Math.round(loadProgressFrac * fakeProgressPercentStart);\r\n        progressElement.max = 100;\r\n    }\r\n    if (loadProgressFrac >= 1) {\r\n        console.log(\"Loading done\");\r\n    }\r\n}\r\n\r\nfunction domContentLoaded() {\r\n    initPokiSdk();\r\n    console.log(\"DOM content loaded event received\");\r\n    let canvas = document.getElementById('canvas');\r\n    canvas.addEventListener(\"contextmenu\", stopContextMenu);\r\n    if (!postRunDone) {\r\n        resizeCanvas(false);\r\n    }\r\n    window.addEventListener('blur', ev => setGameFocus(false));\r\n    window.addEventListener('focus', ev => setGameFocus(true));\r\n    canvas.onpointerdown = beginPointerDrag;\r\n    canvas.onpointerup = endPointerDrag;\r\n    theDomLoaded = true;\r\n}\r\n\r\nfunction beginPointerDrag(e) {\r\n    let canvas = document.getElementById('canvas');\r\n    canvas.setPointerCapture(e.pointerId);\r\n}\r\n\r\nfunction endPointerDrag(e) {\r\n    let canvas = document.getElementById('canvas');\r\n    canvas.releasePointerCapture(e.pointerId);\r\n}\r\n\r\nfunction setGameFocus(f) {\r\n    if (postRunDone) {\r\n        Module.ccall('set_game_focus', 'v', ['number'], [f]);\r\n    }\r\n}\r\n\r\nfunction canBeGameGuid(str) {\r\n    return str && str.match('([A-F]|[0-9]){16}');\r\n}\r\n\r\nfunction getMeta(metaName) {\r\n    const metas = document.getElementsByTagName('meta');\r\n    for (let i = 0; i < metas.length; i++) {\r\n        if (metas[i].getAttribute('name') === metaName) {\r\n            return metas[i].getAttribute('content');\r\n        }\r\n    }\r\n    return '';\r\n}\r\n\r\nfunction getCSSRgb(color) {\r\n    return `rgb(${Math.round(color[0])}, ${Math.round(color[1])}, ${Math.round(color[2])})`;\r\n}\r\nlet lastGradientStyleStr = \"\";\r\nlet lastDeepLinkLoadFraction = 0;\r\n\r\nfunction getGradientStr(frac) {\r\n    let fromColor = [frac * 0x70, frac * 0xe1, frac * 0xfd];\r\n    let toColor = [frac * 0x00, frac * 0xa2, frac * 0xff];\r\n    let str = `linear-gradient(135deg, ${getCSSRgb(fromColor)}, ${getCSSRgb(toColor)})`\r\n    return str;\r\n}\r\n\r\nfunction hideOverlayGradient() {\r\n    var gradient = document.getElementById('gradient');\r\n    gradient.style.display = \"none\";\r\n}\r\nvar showedStartGameError = false;\r\n\r\nfunction setPokiInited() {\r\n    PokiSDK.gameLoadingStart();\r\n    pokiInited = true;\r\n}\r\n\r\nfunction initPokiSdk() {\r\n    PokiSDK.init().then(() => {\r\n      setPokiInited();\r\n    }).catch(() => {\r\n      setPokiInited();\r\n    });\r\n  }\r\n\r\nfunction hideOverlay() {\r\n    var playContent = document.getElementById('play_content');\r\n    playContent.style.display = \"none\";\r\n    hideOverlayGradient();\r\n}\r\n\r\nfunction startGame() {\r\n    try {\r\n        console.log(\"Registering event listeners\");\r\n        window.addEventListener(\"beforeunload\", function (event) {\r\n            Module.ccall('app_terminate_if_necessary', 'v');\r\n        });\r\n        window.addEventListener(\"unload\", function (event) {\r\n            Module.ccall('app_terminate_if_necessary', 'v');\r\n        });\r\n        document.addEventListener(\"visibilitychange\", function () {\r\n            if (document.visibilityState === 'visible') {\r\n                Module.ccall('app_resume', 'v');\r\n            } else {\r\n                Module.ccall('app_pause', 'v');\r\n            }\r\n        });\r\n        console.log(\"Confirming accept in app\");\r\n        try {\r\n            Module.ccall('user_accepted_and_clicked', 'v');\r\n            Module.ccall('set_is_mobile', 'v', ['number'], [matchMedia('(pointer:coarse)').matches]);\r\n        } catch (err4) {}\r\n        gameStarted = true;\r\n        if (!updatedScreenSize) {\r\n            resizeCanvas(true);\r\n        }\r\n    } catch (err) {\r\n        if (!showedStartGameError) {\r\n            let foundModuleAsm = false;\r\n            let additionalInfo = \"\";\r\n            try {\r\n                if (Module[\"asm\"]) {\r\n                    foundModuleAsm = true;\r\n                }\r\n            } catch (err2) {}\r\n            if (!foundModuleAsm) {\r\n                additionalInfo += \"Could not find Module.asm\";\r\n            }\r\n            console.log(`Error when starting game. Try to reload the page. Error message: ${err}. ${additionalInfo}`);\r\n            showedStartGameError = true;\r\n        }\r\n    }\r\n}\r\nvar pokiStopped = true;\r\n\r\nfunction pokiEnsureStop() {\r\n    if (!pokiStopped) {\r\n        PokiSDK.gameplayStop();\r\n        pokiStopped = true;\r\n    }\r\n}\r\n\r\nfunction pokiEnsureStart() {\r\n    if (pokiStopped) {\r\n        PokiSDK.gameplayStart();\r\n        pokiStopped = false;\r\n    }\r\n}\r\nvar startGameAttempts = 0;\r\nvar tryStartGameTimeout = null;\r\n\r\nfunction tryStartGame() {\r\n    console.log(\"tryStartGame()\", gameReadyToStart, pokiInited, theDomLoaded, postRunDone);\r\n    if (gameReadyToStart) {\r\n        return;\r\n    }\r\n    if (!postRunDone || !theDomLoaded || !pokiInited) {\r\n        startGameAttempts++;\r\n        if (startGameAttempts == 20) {\r\n            return;\r\n        }\r\n        if (tryStartGameTimeout != null) {\r\n            clearTimeout(tryStartGameTimeout);\r\n        }\r\n        tryStartGameTimeout = setTimeout(tryStartGame, startGameAttempts * 100);\r\n        console.log(\"Not ready to start game yet...\");\r\n        return;\r\n    }\r\n    gameReadyToStart = true;\r\n    PokiSDK.gameLoadingFinished();\r\n    console.log(\"Starting game\");\r\n   \r\n    startGame();\r\n   \r\n}\r\n\r\nfunction simpleLogC(str) {\r\n    if (postRunDone) {\r\n        Module.ccall('log_simple', 'v', ['string'], [str]);\r\n    } else {\r\n        console.log(str);\r\n    }\r\n}\r\n\r\nfunction appErrorC(code, str) {\r\n    if (postRunDone) {\r\n        Module.ccall('app_error_ts', 'v', ['number', 'string'], [code, str]);\r\n    } else {\r\n        console.error(str, code);\r\n    }\r\n}\r\n\r\nfunction simpleAppErrorC(str) {\r\n    appErrorC(1, str);\r\n}\r\n\r\nfunction parseUrlArgument(name) {\r\n    let result = \"\";\r\n    let str = window.assgdd.search;\r\n    if (str.length > 0 && str[0] == '?') {\r\n        var arr = str.substr(1).split('&');\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i].startsWith(name + \"=\")) {\r\n                result = arr[i].substr(name.length + 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction parseUrlArgumentInt(name) {\r\n    let str = parseUrlArgument(name);\r\n    let parsed = parseInt(str);\r\n    if (isNaN(parsed)) {\r\n        return 0;\r\n    } else {\r\n        return parsed;\r\n    }\r\n}\r\n\r\nfunction resizeCanvas(informC) {\r\n    let iw = window.innerWidth;\r\n    let ih = window.innerHeight;\r\n    let canvas = document.getElementById('canvas');\r\n    let border = document.getElementById('canvas_border');\r\n    canvas.width = iw * window.devicePixelRatio;\r\n    canvas.height = ih * window.devicePixelRatio;\r\n    border.style.marginTop = '0px';\r\n    let gradient = document.getElementById(\"gradient\");\r\n    let webViewContent = document.getElementById(\"webview_content\");\r\n    [gradient, webViewContent].forEach(e => {\r\n        if (e) {\r\n            e.style.left = '0px';\r\n        }\r\n    });\r\n    [canvas, gradient, webViewContent].forEach(e => {\r\n        if (e) {\r\n            e.style.width = iw + 'px';\r\n            e.style.height = ih + 'px';\r\n            e.style.borderRadius = '0px';\r\n        }\r\n    });\r\n    if (informC && gameStarted && requestedCanvas) {\r\n        Module.ccall(\"update_screen_size\", \"v\", [\"number\", \"number\", \"number\"], [canvas.width, canvas.height, window.devicePixelRatio]);\r\n        updatedScreenSize = true;\r\n    }\r\n}\r\n\r\nfunction pokiSendLevelData() {\r\n    navigator.sendBeacon('https:\/\/leveldata.poki.io\/fancade-5F084A0BCE06B710', 'f9564e4e-ef25-4e4b-ba67-cb11a1576bbd');\r\n}\r\n\r\nfunction stopContextMenu(event) {\r\n    event.preventDefault();\r\n    return false;\r\n}\r\nvar Module = {\r\n    locateFile: function (path, prefix) {\r\n        if (prefix == \"\") {\r\n            return \"webapp\/\" + path;\r\n        }\r\n        return prefix + path;\r\n    },\r\n    preRun: [function () {\r\n        console.log(\"preRun() called\");\r\n    }],\r\n    postRun: [function () {\r\n        console.log(\"postRun() called\");\r\n        let canvas = document.getElementById('canvas');\r\n        document.onfullscreenchange = function () {\r\n            setTimeout(function () {\r\n                resizeCanvas(true);\r\n                if (document.fullscreenElement && gameStarted && requestedCanvas) {\r\n                    simpleLogC(\"Canvas size \" + canvas.width + \" x \" + canvas.height);\r\n                    Module.ccall(\"update_screen_size\", \"v\", [\"number\", \"number\", \"number\"], [canvas.width, canvas.height, 1]);\r\n                }\r\n            }, 500);\r\n        };\r\n        window.addEventListener('resize', (event) => resizeCanvas(true), false);\r\n        if (theDomLoaded) {\r\n            resizeCanvas(true);\r\n        }\r\n        console.log(\"Registering keydown listener\");\r\n        window.addEventListener('keydown', e => {\r\n            ccall(\"keydown_browser\", \"v\", [\"string\"], [e.key]);\r\n        });\r\n        Audio.onRuntimeInitialized();\r\n        {\r\n            canvas.addEventListener(\"touchstart\", touchStart, true);\r\n            document.addEventListener(\"touchmove\", touchMove, true);\r\n            document.addEventListener(\"touchend\", touchEnd, true);\r\n            document.addEventListener(\"touchcancel\", touchEnd, true);\r\n            canvas.addEventListener(\"mousedown\", mouseDown, true);\r\n            document.addEventListener(\"mousemove\", mouseMove, true);\r\n            document.addEventListener(\"mouseup\", mouseUp, true);\r\n        }\r\n        postRunDone = true;\r\n    }],\r\n    print: (function () {\r\n        return function (text) {\r\n            if (arguments.length > 1) text = Array.prototype.slice.call(arguments).join(' ');\r\n            console.log(text);\r\n        };\r\n    })(),\r\n    printErr: function (text) {\r\n        if (arguments.length > 1) text = Array.prototype.slice.call(arguments).join(' ');\r\n        console.error(text);\r\n    },\r\n    canvas: (function () {\r\n        var canvas = document.getElementById('canvas');\r\n        canvas.addEventListener(\"webglcontextlost\", function (e) {\r\n            console.log(\"Context lost\");\r\n            e.preventDefault();\r\n            Module.ccall(\"app_set_opengl_context_lost\", \"v\", [\"number\"], [1]);\r\n        }, false);\r\n        canvas.addEventListener(\"webglcontextrestored\", function (event) {\r\n            console.log(\"Context restored\");\r\n            Module.ccall(\"opengl_resume\", \"v\");\r\n        }, false);\r\n        requestedCanvas = true;\r\n        return canvas;\r\n    })(),\r\n    setStatus: function (text) {\r\n        if (!Module.setStatus.last) Module.setStatus.last = {\r\n            time: Date.now(),\r\n            text: ''\r\n        };\r\n        if (text === Module.setStatus.last.text) return;\r\n        var m = text.match(\/([^(]+)\\((\\d+(\\.\\d+)?)\\\/(\\d+)\\)\/);\r\n        var now = Date.now();\r\n        if (m && now - Module.setStatus.last.time < 30) return;\r\n        Module.setStatus.last.time = now;\r\n        Module.setStatus.last.text = text;\r\n        if (m) {\r\n            text = m[1];\r\n            loadProgressFrac = parseInt(m[2]) \/ parseInt(m[4]);\r\n        } else {\r\n            loadProgressFrac = 1;\r\n        }\r\n        updateLoadProgress();\r\n    },\r\n    totalDependencies: 0,\r\n    monitorRunDependencies: function (left) {\r\n        this.totalDependencies = Math.max(this.totalDependencies, left);\r\n    },\r\n    postMainLoop: function () {\r\n        Audio.queuedata();\r\n    },\r\n    onRuntimeInitialized: function () {\r\n        tryStartGame();\r\n    }\r\n};\r\nvar notifications = [];\r\nvar webViewIframe = null;\r\nvar storedScripts = [];\r\nvar webviewDomLoaded = false;\r\nvar fsSyncStatus = \"\";\r\nasync function isUrlFound(url) {\r\n    try {\r\n        const response = await fetch(url, {\r\n            method: 'HEAD',\r\n            cache: 'no-cache'\r\n        });\r\n        return response.status === 200;\r\n    } catch (error) {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction checkHintFileExist(src, li) {\r\n    isUrlFound(src).then(found => {\r\n        if (found) {\r\n            Module.ccall(\"hint_file_exists\", \"v\", [\"number\"], [li]);\r\n        }\r\n    });\r\n}\r\n\r\nfunction postStored() {\r\n    for (var i = 0; i < storedScripts.length; i++) {\r\n        webViewIframe.contentWindow.postMessage(\"eval:\" + storedScripts[i], '*');\r\n    }\r\n    storedScripts = [];\r\n}\r\n\r\nfunction onWebviewDomContentLoaded() {\r\n    webviewDomLoaded = true;\r\n    simpleLogC(\"Webview dom content loaded\");\r\n    postStored();\r\n}\r\n\r\nfunction webViewPostMessage(message) {\r\n    Module.ccall(\"app_webview_message\", \"v\", [\"string\"], [message]);\r\n}\r\n\r\nfunction webViewError(type, message) {\r\n    webViewPostMessage(`error|${type}|${message}`);\r\n}\r\n\r\nfunction webViewClose() {\r\n    try {\r\n        var content = document.getElementById(\"webview_content\");\r\n        content.style.display = 'none';\r\n        if (content.contains(webViewIframe)) {\r\n            webviewDomLoaded = false;\r\n            webViewIframe.contentWindow.removeEventListener('DOMContentLoaded', onWebviewDomContentLoaded);\r\n            content.removeChild(webViewIframe);\r\n        }\r\n        setTimeout(function () {\r\n            Module.ccall(\"set_game_focus\", \"v\", [\"number\"], [true])\r\n        }, 100);\r\n    } catch (err) {\r\n        webViewError(\"unknown\", err);\r\n    }\r\n}\r\n\r\nfunction webViewOpen(path) {\r\n    try {\r\n        let arr = readLocalFile(path);\r\n        let html = new TextDecoder(\"utf-8\").decode(arr);\r\n        if (webViewIframe == null) {\r\n            window.onmessage = function (e) {\r\n                if (typeof (e.data) !== 'string') {\r\n                    return;\r\n                }\r\n                webViewPostMessage(e.data);\r\n            }\r\n        }\r\n        html = html.replace(\"common.js\", `webapp\/view_common.js`);\r\n        html = html.replace(\"common.css\", `webapp\/view_common.css`);\r\n        var content = document.getElementById(\"webview_content\");\r\n        content.style.display = 'block';\r\n        webViewIframe = document.createElement('iframe');\r\n        webViewIframe.classList.add('webview');\r\n        webViewIframe.allowtransparency = true;\r\n        content.appendChild(webViewIframe);\r\n        webViewIframe.contentWindow.document.open();\r\n        webviewDomLoaded = false;\r\n        webViewIframe.contentWindow.addEventListener('DOMContentLoaded', onWebviewDomContentLoaded);\r\n        webViewIframe.contentWindow.document.write(html);\r\n        webViewIframe.contentWindow.document.close();\r\n    } catch (err) {\r\n        webViewError(\"unknown\", err);\r\n    }\r\n}\r\n\r\nfunction webViewExecuteJS(jsString) {\r\n    try {\r\n        if (!webviewDomLoaded) {\r\n            storedScripts.push(jsString);\r\n        } else {\r\n            webViewIframe.contentWindow.postMessage(\"eval:\" + jsString, '*');\r\n        }\r\n    } catch (err) {\r\n        webViewError(\"unknown\", err);\r\n    }\r\n}\r\n\r\nfunction getHostname() {\r\n    let hostname = window.assgdd.hostname.split(':')[0];\r\n    let lengthBytes = lengthBytesUTF8(hostname) + 1;\r\n    let stringOnWasmHeap = _malloc(lengthBytes);\r\n    stringToUTF8(hostname, stringOnWasmHeap, lengthBytes);\r\n    return stringOnWasmHeap;\r\n}\r\n\r\nfunction parseUrlArgumentString(name) {\r\n    let str = parseUrlArgument(name);\r\n    let lengthBytes = lengthBytesUTF8(str) + 1;\r\n    let stringOnWasmHeap = _malloc(lengthBytes);\r\n    stringToUTF8(str, stringOnWasmHeap, lengthBytes);\r\n    return stringOnWasmHeap;\r\n}\r\n\r\nfunction writeLocalFile(buffer, pathDevice) {\r\n    let arr = new Uint8Array(buffer);\r\n    let stream = FS.open(pathDevice, 'w');\r\n    FS.write(stream, arr, 0, arr.length, 0);\r\n    FS.close(stream);\r\n}\r\n\r\nfunction readLocalFile(path) {\r\n    let stream = FS.open(path, 'r');\r\n    FS.llseek(stream, 0, 2);\r\n    let fileSize = stream.position;\r\n    FS.llseek(stream, 0, 0);\r\n    let buf = new Uint8Array(fileSize);\r\n    FS.read(stream, buf, 0, fileSize, 0);\r\n    FS.close(stream);\r\n    return buf;\r\n}\r\n\r\nfunction resizeModal(modal, modalContent, maxWidth) {\r\n    let iw = window.innerWidth;\r\n    let ih = window.innerHeight;\r\n    let top = Math.min(0.15 * ih, 100);\r\n    let w = Math.min(iw, maxWidth);\r\n    modal.style.display = \"block\";\r\n    modalContent.style.width = w + \"px\";\r\n    modal.style.paddingTop = top + \"px\";\r\n    return w;\r\n}\r\n\r\nfunction fetchUrl(url, id, useToken) {}\r\n\r\nfunction firebasePause() {}\r\n\r\nfunction firebaseResume() {}\r\n\r\nfunction adInit() {\r\n    simpleLogC(\"adInit()\");\r\n    setTimeout(() => Module.ccall(\"ad_on_inited\", \"v\"), 100);\r\n}\r\n\r\nfunction adInterstitialShow() {\r\n    simpleLogC(\"adInterstitialShow()\");\r\n    PokiSDK.commercialBreak().then(() => {\r\n        setGameFocus(true);\r\n        Module.ccall(\"ad_interstitial_on_showed\", \"v\", [\"number\"], [1]);\r\n    });\r\n}\r\n\r\nfunction adRewardedShow() {\r\n    simpleLogC(\"adRewardedShow()\");\r\n    pokiEnsureStop();\r\n    PokiSDK.rewardedBreak().then((success) => {\r\n        Module.ccall(\"ad_rewarded_on_showed\", \"v\", [\"number\"], [success ? 1 : 0]);\r\n        if (success) {\r\n            Module.ccall(\"ad_rewarded_on_rewarded\", \"v\");\r\n        }\r\n    });\r\n}\r\n\r\nfunction firebaseDeinit() {}\r\n\r\nfunction currentTimeSecondsRound() {\r\n    return Math.round(Date.now() \/ 1000);\r\n}\r\n  <\/script>\r\n\r\n  <!-- Auto generated JS -->\r\n  <script type=\"text\/javascript\" src=\"webapp\/index.js\"><\/script>\r\n<\/body>\r\n\r\n<\/html>");
document.close()
